*neco-ruby-keyword-args.txt*

Author : rhysd <lin90162@yahoo.co.jp>

CONTENTS        *neco-ruby-keyword-args-contents*
Introduction    |neco-ruby-keyword-args-introduction|
Use Case        |neco-ruby-keyword-args-use-case|
Variables       |neco-ruby-keyword-args-variables|
Functions       |neco-ruby-keyword-args-functions|
Dependency      |neco-ruby-keyword-args-dependency|
License         |neco-ruby-keyword-args-license|


==============================================================================
INTRODUCTION                             *neco-ruby-keyword-args-introduction*

*neco-ruby-keyword-args* is a source of neocomplcache which completes keyword
argments in Ruby.

Keyword arguments are available in Ruby 2.0 or later.  Keyword arguments allow
us to forget the order of the arguments.  However, we must remember the name
of arguments (although this is far easy in contrast to the order of them).

|neco-ruby-keyword-args| collect keyword arguments from the buffer you are
editting and ruby files required in the buffer.


==============================================================================
USE CASE                                     *neco-ruby-keyword-args-use-case*

>
    def cli_parse(argc: 0, argv: [])
        # your implements
    end
<

Above cli_parse is Ruby method with keyword arguments, argc and argv.
Next, you type below anywhere else.

>
    cli_parse arg
<

You can find some completion word in a popup menu. Completion words may be
like below.

>
    argc:  [K] 0 is default value
    argv:  [K] [] is default value
<

argc: and argv: are completion words which |neco-ruby-keyword-args| provides.
[K] is the mark of keyword argument completion.
Items after the mark is a default value of the keyword argument (0 for argc:,
[] for argv).


==============================================================================
VARIABLES                                   *neco-ruby-keyword-args-variables*

g:neco_ruby_keyword_args_disable    *neco-ruby-keyword-args-disable*

    If this variable exists, |neco-ruby-keyword-args| is turned off.
    This variable doesn't exist by default.


==============================================================================
FUNCTIONS                                   *neco-ruby-keyword-args-functions*

neocomplcache#sources#ruby_keyword_args_complete#cache_file({file})

    This function caches keyword argments defined in {file} and files required
    in {file}.

neocomplcache#sources#ruby_keyword_args_complete#reset_cache()

    This function resets the cache of completion words which
    |neco-ruby-keyword-args| collected.


==============================================================================
DEPENDENCY                                 *neco-ruby-keyword-args-dependency*

|neco-ruby-keyword-args| is the source of |neocomplcache|. You should install 
|neocomplcache| before installing |neco-ruby-keyword-args|.


==============================================================================
LICENSE                                      *neco-ruby-keywords-args-license*

|neco-ruby-keyword-args| is distributed under MIT License.


Copyright (c) 2012 rhysd

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
THE USE OR OTHER DEALINGS IN THE SOFTWARE.

